-- Generated by tools/generate-rom.pl
-- Template: https://www.xilinx.com/support/answers/8183.html
-- But changed manually afterwards

library ieee;
use ieee.std_logic_1164.all;
use work.txt_utils.all;
use work.arch_defs.all;
use work.utils.all;

entity rom_vga is
    port ( a: in std_logic_vector(31 downto 0);
           z: out std_logic_vector(31 downto 0);
           en: in std_logic
         );
    attribute syn_romstyle : string;
    attribute syn_romstyle of z : signal is "select_rom";
end rom_vga;

architecture rtl of rom_vga is
    signal my_z : word_t;
begin
    z <= my_z when en = '1' else HI_Z;
    process(a)
    begin
        if en = '1' then
            printf("Address = %s\n", a);
            case a is
                -- _start:
                -- FIXME the first instruction won't be executed.
                -- No idea why, so keep that in mind and place a nop there or something
                -- 00000000 <_start>:
                when X"0000_0000" => my_z <= X"00000000";       -- nop
                when X"0000_0004" => my_z <= X"3c1c1000";       -- lui     gp,0x1000
                when X"0000_0008" => my_z <= X"00001025";       -- move    v0,zero
                when X"0000_000c" => my_z <= X"3442001c";       -- ori     v0,v0,0x1c
                when X"0000_0010" => my_z <= X"a3820000";       -- sb      v0,0(gp)
                when X"0000_0014" => my_z <= X"83820000";       -- lb      v1,0(gp)
                when X"0000_0018" => my_z <= X"08000000";       -- j       0 <_start>

                when others => null;
            end case;
        end if;
    end process;
end rtl;

